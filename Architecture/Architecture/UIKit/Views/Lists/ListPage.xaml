<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:controls="clr-namespace:Architecture.Controls"
             xmlns:local="clr-namespace:Architecture"
             x:Class="Architecture.ListPage"
             Visual="Material"
             x:DataType="local:ListViewModel"
             x:Name="listPageRoot">

    <ContentPage.BindingContext>
        <local:ListViewModel />
    </ContentPage.BindingContext>
    
    <NavigationPage.TitleView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <controls:PageTitleView 
                IsVisible="{Binding SearchIsVisible, Converter={StaticResource InvertedBoolConv}}"
                Text="Simple List" />
            <SearchBar 
                IsVisible="{Binding SearchIsVisible}"
                Text="{Binding Query, Mode=TwoWay}"
                Visual="Default"
                FontSize="Small"
                Placeholder="{local:Translate Gen_Search}"
                PlaceholderColor="{StaticResource ToolbarTextColor}"
                TextColor="{StaticResource ToolbarTextColor}"
                VerticalOptions="Center"
                CancelButtonColor="{StaticResource ToolbarTextColor}"
                BackgroundColor="Transparent">
                <SearchBar.Behaviors>
                    <local:EventToCommandBehavior EventName="TextChanged" Command="{Binding SearchTextChangedCommand}" />
                </SearchBar.Behaviors>
            </SearchBar>
            <Label 
                Grid.Column="1"
                FontSize="{StaticResource ToolbarItemSize}"
                VerticalOptions="Center"
                Margin="0, 0, 24, 0"
                Text="{StaticResource SearchIcon}"
                TextColor="{StaticResource ToolbarTextColor}"
                FontFamily="{StaticResource FontAwesomeSolid}">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding ShowSearchCommand}" />
                </Label.GestureRecognizers>
                <Label.Triggers>
                    <DataTrigger TargetType="Label" Binding="{Binding SearchIsVisible}" Value="False">
                        <Setter Property="Text" Value="{StaticResource SearchIcon}" />
                    </DataTrigger>
                    <DataTrigger TargetType="Label" Binding="{Binding SearchIsVisible}" Value="True">
                        <Setter Property="Text" Value="{StaticResource CloseIcon}" />
                    </DataTrigger>
                </Label.Triggers>
            </Label>
        </Grid>
    </NavigationPage.TitleView>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <controls:SegmentControl 
            ValueChangedCommand="{Binding SegmentValueChangedCommand}"
            IsVisible="{Binding IsBusy, Converter={StaticResource InvertedBoolConv}}"
            Margin="{StaticResource MainPadding}">
            <controls:SegmentControl.ItemsSource>
                <controls:SegmentControlItem Text="Text Cell" IsSelected="True" Tag="1" />
                <controls:SegmentControlItem Text="Image Cell" Tag="2" />
            </controls:SegmentControl.ItemsSource>
        </controls:SegmentControl>
        <Grid 
            Grid.Row="1"
            IsVisible="{Binding IsBusy, Converter={StaticResource InvertedBoolConv}}">
            <ListView 
                IsVisible="{Binding IsImageCellVisible, Converter={StaticResource InvertedBoolConv}}"
			    CachingStrategy="RecycleElement"
			    ItemsSource="{Binding Items}"
			    SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
			    RefreshCommand="{Binding RefreshListCommand}"
			    IsPullToRefreshEnabled="True"
			    IsRefreshing="{Binding IsRefreshing, Mode=TwoWay}"
			    RefreshControlColor="{StaticResource PrimaryColor}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local:ListItemViewModel">
                        <TextCell
						    Text="{Binding Title}"
						    Detail="{Binding SubTitle}">
                            <TextCell.ContextActions>
                                <MenuItem 
                                    Command="{Binding BindingContext.DeleteItemCommand, Source={x:Reference listPageRoot}}"
                                    CommandParameter="{Binding .}"
                                    Text="{local:Translate Gen_Delete}" 
                                    IsDestructive="True" />
                            </TextCell.ContextActions>
                        </TextCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <ListView 
                IsVisible="{Binding IsImageCellVisible}"
			    CachingStrategy="RecycleElement"
			    ItemsSource="{Binding Items}"
			    SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
			    RefreshCommand="{Binding RefreshListCommand}"
			    IsPullToRefreshEnabled="True"
			    IsRefreshing="{Binding IsRefreshing, Mode=TwoWay}"
			    RefreshControlColor="{StaticResource PrimaryColor}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local:ListItemViewModel">
                        <ImageCell
						    Text="{Binding Title}"
						    Detail="{Binding SubTitle}"
                            ImageSource="{Binding ImageSource}">
                            <ImageCell.ContextActions>
                                <MenuItem 
                                    Command="{Binding BindingContext.DeleteItemCommand, Source={x:Reference listPageRoot}}"
                                    CommandParameter="{Binding .}"
                                    Text="{local:Translate Gen_Delete}" 
                                    IsDestructive="True" />
                            </ImageCell.ContextActions>
                        </ImageCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <Button
            Grid.RowSpan="2"
            Command="{Binding AddItemCommand}"
            IsVisible="{Binding IsBusy, Converter={StaticResource InvertedBoolConv}}"
            Style="{StaticResource FloatingButton}"
            FontFamily="{StaticResource FontAwesomeSolid}"
            Text="{StaticResource AddIcon}" />
        <controls:LoadingView 
            Grid.RowSpan="2"
            IsRunning="{Binding IsBusy}" />
    </Grid>
</ContentPage>